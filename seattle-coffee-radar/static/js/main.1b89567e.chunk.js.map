{"version":3,"sources":["icons/coffee_icon.png","icons/starbucks_icon.png","GoogleMap.js","ShowHideList.js","SearchForm.js","SideBar.js","ShopListView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","GoogleMap","state","coffeeShops","getCoffeeShops","axios","get","URLSearchParams","client_id","client_secret","section","near","query","limit","v","then","response","validShops","data","groups","items","filter","item","undefined","venue","location","address","_this","setState","renderGoogleAPI","catch","e","window","alert","initMap","map","google","maps","Map","document","getElementById","center","lat","lng","zoom","props","updateMap","largeInfowindow","InfoWindow","markers","markerIDs","coffeeShop","position","title","name","id","venue_address","icon","url","coffee_icon","scaledSize","Size","includes","starbucks_icon","marker","Marker","animation","Animation","DROP","push","addListener","getAnimation","setAnimation","BOUNCE","setTimeout","setCenter","setContent","request","getCenter","places","PlacesService","textSearch","place","status","PlacesServiceStatus","OK","formatted_address","rating","open","opening_hours","open_now","price","price_level","repeat","imgSrc","photos","getUrl","maxWidth","maxHeight","infoWindowContent","concat","updateMarkers","updateMarkerIDs","updateFilteredMarkerIDs","getHTMLScript","index","getElementsByTagName","script","createElement","src","async","defer","parentNode","insertBefore","onerror","this","react_default","a","tabIndex","Component","ShowHideList","showListing","searchPlace_marker","setMap","bounds","LatLngBounds","extend","fitBounds","hideListing","className","type","value","onClick","SearchForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","target","searchValues","updateSearchValues","autocomplete","Autocomplete","types","getPlace","from","console","log","geometry","updateSearchPlace_marker","handleSubmit","preventDefault","searchWithinTime","distanceMatrixService","DistanceMatrixService","origins","mode","getDistanceMatrix","destinations","travelMode","TravelMode","unitSystem","UnitSystem","IMPERIAL","DistanceMatrixStatus","displayMarkersWithinTime","maxDuration","duration","originAddresses","atLeastOne","_loop","i","rows","elements","result","element","distanceText","distance","text","durationText","infowindow","content","event","close","length","bind","assertThisInitialized","onSubmit","onChange","placeholder","defaultChecked","SideBar","openSideBar","sideBarClass","updateSideBarClass","ShopListView","filteredMarkerIDs","key","href","trigger","CoffeeApp","_this$state","src_SideBar","src_ShowHideList","src_ShopListView","src_SearchForm","src_GoogleMap","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","src_App","URL","process","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1b89567e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coffee_icon.352f327a.png\";","module.exports = __webpack_public_path__ + \"static/media/starbucks_icon.d08e3832.png\";","import React, { Component } from 'react';\r\nimport './css/App.css';\r\nimport axios from 'axios';\r\nimport coffee_icon from './icons/coffee_icon.png';\r\nimport starbucks_icon from './icons/starbucks_icon.png';\r\n\r\n\r\nclass GoogleMap extends Component {\r\n\r\n    state = {\r\n        coffeeShops: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCoffeeShops();\r\n    }\r\n\r\n\r\n    getCoffeeShops = () => {\r\n        const endPoint = \"https://api.foursquare.com/v2/venues/explore?\";\r\n        const parameters = {\r\n          client_id: \"LY3VCLOLF2REAZE5GYWGDKPPYZJCUV2W42P1421UNMIUXR4I\",\r\n          client_secret: \"DGTB0YFUFVD2ISY2NYK2A1JA2SB4QHD0NZNKRUEYAFEJYUD1\",\r\n          section: \"coffee\",\r\n          near: \"seattle\",\r\n          query: \"best\",\r\n          limit: 25,\r\n          v:\"20181212\"\r\n        }\r\n    \r\n        axios.get(endPoint + new URLSearchParams(parameters)).then(response => {\r\n\r\n          let validShops = response.data.response.groups[0].items.filter( item => \r\n            item.venue.location.address !== undefined\r\n          )\r\n\r\n          this.setState({\r\n            coffeeShops: validShops\r\n          }, this.renderGoogleAPI())\r\n        }).catch(e => {\r\n          // console.log(e);\r\n          window.alert('ERROR: ' + e);\r\n        })\r\n      }\r\n    \r\n    \r\n      initMap = () => {\r\n        const map = new window.google.maps.Map(document.getElementById('map'), {\r\n          center: {lat: 47.6079958, lng: -122.3320709},\r\n          zoom: 13\r\n        });\r\n\r\n        this.props.updateMap(map);\r\n\r\n        const largeInfowindow = new window.google.maps.InfoWindow();\r\n\r\n        let markers = [];\r\n        let markerIDs = [];\r\n        // Create dynamic markers on initialize.\r\n        this.state.coffeeShops.map(coffeeShop => {\r\n          let position = {lat:coffeeShop.venue.location.lat, lng:coffeeShop.venue.location.lng};\r\n          let title = coffeeShop.venue.name;\r\n          let id = coffeeShop.venue.id;\r\n          let venue_address = coffeeShop.venue.location.address;\r\n\r\n          // Customized marker icons\r\n          let icon = {\r\n            url: coffee_icon,\r\n            scaledSize: new window.google.maps.Size(30, 30)\r\n          }\r\n          if (title.includes(\"Starbucks\")){\r\n            icon.url = starbucks_icon;\r\n            icon.scaledSize = new window.google.maps.Size(40, 40);\r\n          }\r\n          \r\n          let marker = new window.google.maps.Marker({\r\n            map:map,\r\n            position: position,\r\n            title: title,\r\n            animation: window.google.maps.Animation.DROP,\r\n            id: id,\r\n            icon: icon\r\n          })\r\n\r\n          markers.push(marker);\r\n          markerIDs.push(marker.id);\r\n          \r\n          // Create an onclick event to open an infowindow at each marker.\r\n          // We only allow one infowindow which will open at the marker that is clicked, \r\n          // and populate based on that markers position.\r\n          marker.addListener('click', ()=> {\r\n            // Add animation to clicked marker\r\n            if (marker.getAnimation() !== null) {\r\n              marker.setAnimation(null);\r\n            } else {\r\n              marker.setAnimation(window.google.maps.Animation.BOUNCE);\r\n              setTimeout(()=>{marker.setAnimation(null); }, 600);\r\n            }\r\n            map.setCenter(marker.position);\r\n            if (largeInfowindow.marker !== marker) {\r\n              // Clear the infowindow content to give the shop details to load.\r\n              largeInfowindow.setContent('');\r\n              largeInfowindow.marker = marker;\r\n    \r\n              // Make sure the marker property is cleared if the infowindow is closed.\r\n              largeInfowindow.addListener('closeclick', () => {\r\n                largeInfowindow.marker = null;\r\n              });\r\n    \r\n              const request = {\r\n                location: map.getCenter(),\r\n                query: title + ', ' +venue_address\r\n              }\r\n              const service = new window.google.maps.places.PlacesService(map);\r\n              service.textSearch(request, (place, status)=>{\r\n                if (status === window.google.maps.places.PlacesServiceStatus.OK){\r\n                  // console.log(place[0]);\r\n                  let address = place[0].formatted_address;\r\n                  let rating = place[0].rating;\r\n                  let open = place[0].opening_hours ? (place[0].opening_hours.open_now ? 'Open' : 'Closed') : 'Unknown';\r\n                  let price = place[0].price_level ? \"$\".repeat(place[0].price_level) : 'Unknown';\r\n    \r\n                  let imgSrc = place[0].photos ? place[0].photos[0].getUrl({'maxWidth': 120, 'maxHeight': 120}): '' ;\r\n                  let infoWindowContent = `\r\n                    <div>\r\n                      <div id=\"photo\">\r\n                        <img alt = \"Image of the coffee shop: ${title}\" src= ${imgSrc}>\r\n                      </div>  \r\n                      <div id=\"shop-info\">\r\n                        <div id=\"shop-name\">${title}</div>\r\n                        <div><strong>Address: </strong>${address}</div>\r\n                        <div><strong>Rating: </strong>${rating}/5.0 </div>\r\n                        <div><strong>Price: </strong>${price} </div>\r\n                        <div><strong>Is open?: </strong> ${open} </div>\r\n                      </div>\r\n                    </div>\r\n                    `;\r\n    \r\n                    largeInfowindow.setContent(infoWindowContent);\r\n    \r\n                } else {\r\n                  largeInfowindow.setContent(`\r\n                    <div id='shop-name'>${marker.title}</div>\r\n                    <div><strong>Address: </strong>${venue_address}</div>\r\n                    <div>No Shop Details Found</div>\r\n                    `);\r\n                }\r\n    \r\n              });\r\n    \r\n              largeInfowindow.open(map, marker);\r\n            }\r\n          });\r\n        });\r\n        \r\n        this.props.updateMarkers(markers);\r\n        this.props.updateMarkerIDs(markerIDs);\r\n        this.props.updateFilteredMarkerIDs(markerIDs);\r\n      }\r\n    \r\n      renderGoogleAPI = () => {\r\n        this.getHTMLScript(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAXcXV-sDo2jjYfRLVCmOIfhC7umOjkYGk&v=3&libraries=places&callback=initMap\");\r\n        window.initMap = this.initMap;\r\n      }\r\n    \r\n      getHTMLScript = (url) => {\r\n        const index = window.document.getElementsByTagName('script')[0];\r\n        const script = window.document.createElement('script');\r\n\r\n        script.src = url;\r\n        script.async = true;\r\n        script.defer = true;\r\n        index.parentNode.insertBefore(script, index);\r\n\r\n        script.onerror = function() {\r\n          alert(\"Error loading \" + this.src); // Error loading https://example.com/404.js\r\n        };\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div tabIndex=\"0\" id=\"map\" />\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default GoogleMap;","import React, { Component } from 'react';\r\nimport './css/App.css';\r\n\r\nclass ShowHideList extends Component {\r\n\r\n    showListing = ()=>{\r\n\r\n        if (this.props.searchPlace_marker) {\r\n            this.props.searchPlace_marker.setMap(null);\r\n        }\r\n\r\n        let bounds = new window.google.maps.LatLngBounds();\r\n        // Extend the boundaries of the map for each marker and display the marker\r\n        this.props.markers.map(marker => {\r\n            marker.setMap(this.props.map);\r\n            bounds.extend(marker.position);\r\n            marker.setAnimation(window.google.maps.Animation.DROP);\r\n        })\r\n        this.props.map.fitBounds(bounds);\r\n        this.props.updateFilteredMarkerIDs(this.props.markerIDs);\r\n    }\r\n\r\n    hideListing = ()=>{\r\n    this.props.markers.map(marker => {\r\n        marker.setMap(null);\r\n    })\r\n    this.props.updateFilteredMarkerIDs([]);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"show-hide-listings\">\r\n                <input tabIndex=\"0\" className='button-icon' id=\"show-listings\" type=\"button\" value=\"Show All ☕\" onClick={this.showListing}/>\r\n                <input tabIndex=\"0\" className='button-icon' id=\"hide-listings\" type=\"button\" value=\"Hide All ☕\" onClick={this.hideListing}/>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ShowHideList;","import React, { Component } from 'react';\r\nimport './css/App.css';\r\n\r\nclass SearchForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n      }\r\n\r\n    handleChange = (e)=> {\r\n        const value = e.target.value;\r\n        const name = e.target.name;\r\n        let searchValues = this.props.searchValues;\r\n\r\n        searchValues[name] = value;\r\n        this.props.updateSearchValues(searchValues);\r\n\r\n        // Create the autocomplete object, restricting the search to geographical\r\n        // location types.\r\n        let autocomplete = new window.google.maps.places.Autocomplete((document.getElementById('search-within-time-text')), {types: ['geocode']});\r\n\r\n        // When the user selects an address from the dropdown, populate the address\r\n        // fields in the form.\r\n        autocomplete.addListener('place_changed', ()=> {\r\n            // Get the place details from the autocomplete object.\r\n            if (this.props.searchPlace_marker) {\r\n                this.props.searchPlace_marker.setMap(null);\r\n            } \r\n            let place = autocomplete.getPlace();\r\n            searchValues.from = place.name;\r\n            console.log(place);\r\n\r\n            this.props.map.setCenter(place.geometry.location);\r\n\r\n            let searchPlace_marker = new window.google.maps.Marker({\r\n                map:this.props.map,\r\n                position: place.geometry.location,\r\n                title: place.name,\r\n                animation: window.google.maps.Animation.DROP\r\n            })\r\n\r\n            // this.setState({searchValues, searchPlace_marker});\r\n            this.props.updateSearchValues(searchValues);\r\n            this.props.updateSearchPlace_marker(searchPlace_marker)\r\n        });\r\n\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.searchWithinTime();\r\n        // console.log(this.state.searchValues);\r\n    }\r\n\r\n    // This function allows the user to input a desired travel time, in\r\n    // minutes, and a travel mode, and a location - and only show the listings\r\n    // that are within that travel time (via that travel mode) of the location\r\n    searchWithinTime = () => {\r\n        // Initialize the distance matrix service.\r\n        const distanceMatrixService = new window.google.maps.DistanceMatrixService();\r\n        const address = this.props.searchValues.from;\r\n\r\n        // Check to make sure the place entered isn't blank.\r\n        if (address === '') {\r\n        window.alert('You must enter an address.');\r\n        } else {\r\n            this.props.markers.map(marker => {\r\n                marker.setMap(null);\r\n            })\r\n            // Use the distance matrix service to calculate the duration of the\r\n            // routes between all our markers, and the destination address entered\r\n            // by the user. Then put all the origins into an origin matrix.\r\n            let origins = [];\r\n            this.props.markers.map(marker => {\r\n                origins.push(marker.position);\r\n        }) \r\n\r\n        \r\n        const mode = this.props.searchValues.mode;\r\n        // Now that both the origins and destination are defined, get all the\r\n        // info for the distances between them.\r\n        distanceMatrixService.getDistanceMatrix({\r\n            origins: origins,\r\n            destinations: [address],\r\n            travelMode: window.google.maps.TravelMode[mode],\r\n            unitSystem: window.google.maps.UnitSystem.IMPERIAL,\r\n        }, (response, status) => {\r\n            if (status !== window.google.maps.DistanceMatrixStatus.OK) {\r\n            window.alert('Error was: ' + status);\r\n            console.log(window.google.maps.DistanceMatrixService);\r\n            } else {\r\n            this.displayMarkersWithinTime(response);\r\n            // console.log(response);\r\n            }\r\n        });\r\n        }\r\n\r\n    }\r\n\r\n    // This function will go through each of the results, and,\r\n    // if the distance is LESS than the value in the picker, show it on the map.\r\n    displayMarkersWithinTime = (response) => {\r\n        const maxDuration = this.props.searchValues.duration;\r\n        const origins = response.originAddresses;\r\n\r\n        // Parse through the results, and get the distance and duration of each.\r\n        // Because there might be  multiple origins and destinations we have a nested loop\r\n        // Then, make sure at least 1 result was found.\r\n\r\n        let atLeastOne = false;\r\n        let markerIDs = [];\r\n        for (let i = 0; i < origins.length; i++) {\r\n            let results = response.rows[i].elements;\r\n            // console.log(results);\r\n            results.map(result => {\r\n                let element = result;\r\n\r\n                if (element.status === \"OK\") {\r\n\r\n                    // The distance is returned in feet, but the TEXT is in miles. If we wanted to switch\r\n                    // the function to show markers within a user-entered DISTANCE, we would need the\r\n                    // value for distance, but for now we only need the text.\r\n                    const distanceText = element.distance.text;\r\n                    // Duration value is given in seconds so we make it MINUTES. We need both the value\r\n                    // and the text.\r\n                    const duration = element.duration.value / 60;\r\n                    const durationText = element.duration.text;\r\n                    if (duration <= maxDuration) {\r\n                        //the origin[i] should = the markers[i]\r\n                        this.props.markers[i].setMap(this.props.map);\r\n                        markerIDs.push(this.props.markers[i].id);\r\n                        atLeastOne = true;\r\n                        // console.log(this.props.markers[i])\r\n                        // Create a mini infowindow to open immediately and contain the\r\n                        // distance and duration\r\n                        var infowindow = new window.google.maps.InfoWindow({\r\n                        content: durationText + ' away, ' + distanceText\r\n                        });\r\n            \r\n                        infowindow.open(this.props.map, this.props.markers[i]);\r\n                        // Put this in so that this small window closes if the user clicks\r\n                        // the marker, when the big infowindow opens\r\n\r\n                        this.props.markers[i].infowindow = infowindow;\r\n\r\n                        window.google.maps.event.addListener(this.props.markers[i], 'click', function() {\r\n                            this.infowindow.close();\r\n                        });\r\n                    }\r\n                    this.props.updateFilteredMarkerIDs(markerIDs);\r\n                }\r\n            })\r\n        }\r\n        if (!atLeastOne) {\r\n            window.alert('We could not find any locations within that distance!');\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        return(\r\n            <form id=\"search-form\" onSubmit={this.handleSubmit} onChange={this.handleChange}>\r\n              {/* <input type=\"checkbox\" name='open_now' defaultChecked/>Open Now */}\r\n              <div className=\"search-div\">\r\n                <span className=\"text\"> From </span>\r\n                <input tabIndex=\"0\" id=\"search-within-time-text\" name='from' type=\"text\" placeholder=\"Ex: Pike Market\" />\r\n              </div>\r\n              <div className=\"search-div\">\r\n                <span className=\"text\"> Transportation </span>\r\n                <div className=\"radio-text\">\r\n                  <ul><input tabIndex=\"0\" type=\"radio\" name='mode' value=\"WALKING\" defaultChecked />🚶 Walk </ul>\r\n                  <ul><input tabIndex=\"0\" type=\"radio\" name='mode' value=\"BICYCLING\" />🚲 Bike </ul>\r\n                  <ul><input tabIndex=\"0\" type=\"radio\" name='mode' value=\"DRIVING\" />🚗 Drive </ul>\r\n                </div>\r\n              </div>\r\n              <div className=\"search-div\">\r\n                <span className=\"text\"> Within </span>\r\n                <div className=\"radio-text\">\r\n                  <ul><input tabIndex=\"0\" type=\"radio\" name='duration' value=\"5\" defaultChecked />5 min </ul>\r\n                  <ul><input tabIndex=\"0\" type=\"radio\" name='duration' value=\"10\" />10 min </ul>\r\n                  <ul><input tabIndex=\"0\" type=\"radio\" name='duration' value=\"15\" />15 min </ul>\r\n                </div>\r\n              </div>\r\n              <button tabIndex=\"0\" className='button-icon' id=\"search-within-time\" >Find Me Coffee</button>\r\n            </form>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SearchForm;","import React, { Component } from 'react';\r\nimport './css/App.css';\r\n\r\n\r\nclass SideBar extends Component {\r\n    openSideBar = () => {\r\n        let sideBarClass = this.props.sideBarClass;\r\n\r\n        if (sideBarClass === 'options-box-responsive-open'){\r\n            sideBarClass = 'options-box-responsive-close';\r\n        } else {\r\n            sideBarClass = 'options-box-responsive-open';\r\n        }\r\n\r\n        this.props.updateSideBarClass(sideBarClass);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id='side-bar-button-div'>\r\n                <button id=\"side-bar-button\" tabIndex=\"0\" onClick={this.openSideBar} >🔍</button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideBar;","import React, { Component } from 'react';\r\nimport './css/App.css';\r\n\r\nclass ShopListView extends Component {\r\n\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div id='shop-list-view'>\r\n                {this.props.markers\r\n                    .filter(marker => this.props.filteredMarkerIDs.includes(marker.id))\r\n                    .map(marker => (\r\n                    <ul key= {marker.id}><a tabIndex=\"0\" href=\"#\" onClick={()=>{window.google.maps.event.trigger(marker, 'click')}}>{marker.title}</a></ul>\r\n                )\r\n                    )}\r\n                <ul key={'null'}></ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShopListView;","import React, { Component } from 'react';\nimport './css/App.css';\nimport GoogleMap from './GoogleMap';\nimport ShowHideList from './ShowHideList';\nimport SearchForm from './SearchForm';\nimport SideBar from './SideBar';\nimport ShopListView from './ShopListView';\n\nclass CoffeeApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      map:'',\n      markers:[],\n      markerIDs:[],\n      filteredMarkerIDs:[],\n      searchPlace_marker:null,\n      searchValues:{\n        duration: \"5\",\n        mode: \"WALKING\",\n        from:\"\",\n      },\n      sideBarClass: 'options-box'\n    };\n\n    this.updateMap = this.updateMap.bind(this);\n    this.updateMarkers = this.updateMarkers.bind(this);\n    this.updateMarkerIDs = this.updateMarkerIDs.bind(this);\n    this.updateFilteredMarkerIDs = this.updateFilteredMarkerIDs.bind(this);\n    this.updateSearchValues = this.updateSearchValues.bind(this);\n    this.updateSearchPlace_marker = this.updateSearchPlace_marker.bind(this);\n    this.updateSideBarClass = this.updateSideBarClass.bind(this);\n\n  }\n\n  updateMap(map) {\n    this.setState({\n      map: map\n    });\n  }\n\n  updateMarkers(markers) {\n    this.setState({\n      markers: markers\n    });\n  }\n\n  updateMarkerIDs(markerIDs) {\n    this.setState({\n      markerIDs: markerIDs\n    });\n  }\n\n  updateFilteredMarkerIDs(filteredMarkerIDs) {\n    this.setState({\n      filteredMarkerIDs: filteredMarkerIDs\n    });\n  }\n\n  updateSearchValues(searchValues) {\n    this.setState({\n      searchValues:searchValues\n    })\n  }\n\n  updateSearchPlace_marker(searchPlace_marker) {\n    this.setState({\n      searchPlace_marker:searchPlace_marker\n    })\n  }\n\n  updateSideBarClass(sideBarClass) {\n    this.setState({\n      sideBarClass:sideBarClass\n    })\n  }\n\n\n\n  // Render App ---------------------\n  render() {\n    const {map, markers, markerIDs,filteredMarkerIDs, searchPlace_marker, searchValues, sideBarClass} = this.state;\n\n    return (\n      <div className='canvas'>\n        <div className=\"head\">\n          <h1>Seattle Coffee Radar</h1>\n          <SideBar\n            sideBarClass = {sideBarClass}\n            updateSideBarClass = {this.updateSideBarClass}\n          />\n          <hr className=\"shadow\"/>\n        </div>\n        <div className=\"container\">\n          <div className={this.state.sideBarClass} id=\"side-bar\">\n            <h2>Find Seattle Best Coffee Shop</h2>\n            <hr className=\"gradient\"/>\n            <ShowHideList\n              map = {map}\n              markers = {markers}\n              searchPlace_marker = {searchPlace_marker}\n              markerIDs = {markerIDs}\n              updateFilteredMarkerIDs = {this.updateFilteredMarkerIDs}\n            />\n            <h4>Coffee Shop List</h4>\n            <ShopListView\n              markers={markers}\n              filteredMarkerIDs = {filteredMarkerIDs}\n            />\n            <h3>Search Your Coffee Shop</h3>\n            <hr className=\"gradient\"/>\n            <SearchForm\n              map = {map}\n              searchValues={searchValues}\n              searchPlace_marker={searchPlace_marker}\n              markers = {markers}\n              updateSearchValues={this.updateSearchValues}\n              updateSearchPlace_marker = {this.updateSearchPlace_marker}\n              updateFilteredMarkerIDs = {this.updateFilteredMarkerIDs}\n            />\n          </div>\n          <GoogleMap\n            updateMap={this.updateMap}\n            updateMarkers = {this.updateMarkers}\n            updateMarkerIDs = {this.updateMarkerIDs}\n            updateFilteredMarkerIDs = {this.updateFilteredMarkerIDs}\n          />\n\n        </div>\n        <div id=\"footer\">\n              Copyright (c) 2019 <a tabIndex=\"0\" href=\"./\"><strong>Seattle Coffee Radar</strong></a> All Rights Reserved.\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default CoffeeApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport CoffeeApp from './App';\nimport * as serviceWorker from './serviceWorker';\n// import registerServiceWorker  from 'react-service-worker';\n\nReactDOM.render(<CoffeeApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n// registerServiceWorker();\n"],"sourceRoot":""}